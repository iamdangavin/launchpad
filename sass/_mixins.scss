@function rootRemPercent($px) {
	@return $px/16px*100*1%;
}

@function toRems($px) {
	$baseline-rem: $root-font-px / 1rem;

	@if $px == 0 {
		@return 0;
	}

	@if type-of($px) == "number" {
		@if unit($px) == "rem" {
			@return $px;
		} @else {
			@return $px / $baseline-rem;
		}
	} @else {
		$rems: ();

		@each $value in $px {
			@if $value == 0 {
				$rems: append($rems, $value);
			} @else {
				$rems: append($rems, ($value / $baseline-rem));
			}
		}

		@return $rems;
	}
}

@mixin rem($property, $values) {
	#{$property}: $values;
	#{$property}: toRems($values);
}

@mixin media-max($size) {
	@if type-of($size) == "number" {
		$size: toRems($size);
	} @else {
		$size: toRems(map-get($break-points, $size));
	}
	@media (max-width: $size) {
		@content;
	}
}

@mixin media-min($size) {
	@if type-of($size) == "number" {
		$size: toRems($size);
	} @else {
		$size: toRems(map-get($break-points, $size));
	}
	@media (min-width: $size) {
		@content;
	}
}

@mixin media-range($small, $large) {
	@if type-of($small) == "number" {
		$small: toRems($small);
	} @else {
		$small: toRems(map-get($break-points, $small));
	}
	@if type-of($large) == "number" {
		$large: toRems($large);
	} @else {
		$large: toRems(map-get($break-points, $large));
	}
	@if $small > $large {
		$tmp_small: $small;
		$small: $large;
		$large: $tmp_small;
	}
	@media (min-width: $small) and (max-width: $large) {
		@content;
	}
}

@mixin media-guess($small, $large) {
	@if $small != "" and $large != "" {
		@if map-get($break-points, $small) > map-get($break-points, $large) {
			$tmp_small: $small;
			$small: $large;
			$large: $tmp_small;
		}
		@include media-range($small, $large) {
			@content;
		}		
	} @else if $large == "" {
		@include media-max($small) {
			@content;
		}
	} @else if $small == "" {
		@include media-min($large) {
			@content;
		}
	}
}